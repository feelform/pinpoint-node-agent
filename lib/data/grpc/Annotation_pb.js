// source: Annotation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.PAnnotation', null, global);
goog.exportSymbol('proto.PAnnotationValue', null, global);
goog.exportSymbol('proto.PAnnotationValue.FieldCase', null, global);
goog.exportSymbol('proto.PIntBooleanIntBooleanValue', null, global);
goog.exportSymbol('proto.PIntStringStringValue', null, global);
goog.exportSymbol('proto.PIntStringValue', null, global);
goog.exportSymbol('proto.PLongIntIntByteByteStringValue', null, global);
goog.exportSymbol('proto.PStringStringValue', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PIntStringValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PIntStringValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PIntStringValue.displayName = 'proto.PIntStringValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PIntStringStringValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PIntStringStringValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PIntStringStringValue.displayName = 'proto.PIntStringStringValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PLongIntIntByteByteStringValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PLongIntIntByteByteStringValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PLongIntIntByteByteStringValue.displayName = 'proto.PLongIntIntByteByteStringValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PIntBooleanIntBooleanValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PIntBooleanIntBooleanValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PIntBooleanIntBooleanValue.displayName = 'proto.PIntBooleanIntBooleanValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PStringStringValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PStringStringValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PStringStringValue.displayName = 'proto.PStringStringValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PAnnotationValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.PAnnotationValue.oneofGroups_);
};
goog.inherits(proto.PAnnotationValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PAnnotationValue.displayName = 'proto.PAnnotationValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PAnnotation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PAnnotation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PAnnotation.displayName = 'proto.PAnnotation';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PIntStringValue.prototype.toObject = function(opt_includeInstance) {
  return proto.PIntStringValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PIntStringValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PIntStringValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    intvalue: jspb.Message.getFieldWithDefault(msg, 1, 0),
    stringvalue: (f = msg.getStringvalue()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PIntStringValue}
 */
proto.PIntStringValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PIntStringValue;
  return proto.PIntStringValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PIntStringValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PIntStringValue}
 */
proto.PIntStringValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntvalue(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setStringvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PIntStringValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PIntStringValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PIntStringValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PIntStringValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntvalue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStringvalue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 intValue = 1;
 * @return {number}
 */
proto.PIntStringValue.prototype.getIntvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PIntStringValue} returns this
 */
proto.PIntStringValue.prototype.setIntvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue stringValue = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.PIntStringValue.prototype.getStringvalue = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.PIntStringValue} returns this
*/
proto.PIntStringValue.prototype.setStringvalue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PIntStringValue} returns this
 */
proto.PIntStringValue.prototype.clearStringvalue = function() {
  return this.setStringvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PIntStringValue.prototype.hasStringvalue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PIntStringStringValue.prototype.toObject = function(opt_includeInstance) {
  return proto.PIntStringStringValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PIntStringStringValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PIntStringStringValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    intvalue: jspb.Message.getFieldWithDefault(msg, 1, 0),
    stringvalue1: (f = msg.getStringvalue1()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    stringvalue2: (f = msg.getStringvalue2()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PIntStringStringValue}
 */
proto.PIntStringStringValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PIntStringStringValue;
  return proto.PIntStringStringValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PIntStringStringValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PIntStringStringValue}
 */
proto.PIntStringStringValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntvalue(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setStringvalue1(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setStringvalue2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PIntStringStringValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PIntStringStringValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PIntStringStringValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PIntStringStringValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntvalue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStringvalue1();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getStringvalue2();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 intValue = 1;
 * @return {number}
 */
proto.PIntStringStringValue.prototype.getIntvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PIntStringStringValue} returns this
 */
proto.PIntStringStringValue.prototype.setIntvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue stringValue1 = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.PIntStringStringValue.prototype.getStringvalue1 = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.PIntStringStringValue} returns this
*/
proto.PIntStringStringValue.prototype.setStringvalue1 = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PIntStringStringValue} returns this
 */
proto.PIntStringStringValue.prototype.clearStringvalue1 = function() {
  return this.setStringvalue1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PIntStringStringValue.prototype.hasStringvalue1 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue stringValue2 = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.PIntStringStringValue.prototype.getStringvalue2 = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.PIntStringStringValue} returns this
*/
proto.PIntStringStringValue.prototype.setStringvalue2 = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PIntStringStringValue} returns this
 */
proto.PIntStringStringValue.prototype.clearStringvalue2 = function() {
  return this.setStringvalue2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PIntStringStringValue.prototype.hasStringvalue2 = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PLongIntIntByteByteStringValue.prototype.toObject = function(opt_includeInstance) {
  return proto.PLongIntIntByteByteStringValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PLongIntIntByteByteStringValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PLongIntIntByteByteStringValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    longvalue: jspb.Message.getFieldWithDefault(msg, 1, 0),
    intvalue1: jspb.Message.getFieldWithDefault(msg, 2, 0),
    intvalue2: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bytevalue1: jspb.Message.getFieldWithDefault(msg, 4, 0),
    bytevalue2: jspb.Message.getFieldWithDefault(msg, 5, 0),
    stringvalue: (f = msg.getStringvalue()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PLongIntIntByteByteStringValue}
 */
proto.PLongIntIntByteByteStringValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PLongIntIntByteByteStringValue;
  return proto.PLongIntIntByteByteStringValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PLongIntIntByteByteStringValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PLongIntIntByteByteStringValue}
 */
proto.PLongIntIntByteByteStringValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLongvalue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntvalue1(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntvalue2(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBytevalue1(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBytevalue2(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setStringvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PLongIntIntByteByteStringValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PLongIntIntByteByteStringValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PLongIntIntByteByteStringValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PLongIntIntByteByteStringValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLongvalue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIntvalue1();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIntvalue2();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBytevalue1();
  if (f !== 0) {
    writer.writeSint32(
      4,
      f
    );
  }
  f = message.getBytevalue2();
  if (f !== 0) {
    writer.writeSint32(
      5,
      f
    );
  }
  f = message.getStringvalue();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 longValue = 1;
 * @return {number}
 */
proto.PLongIntIntByteByteStringValue.prototype.getLongvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PLongIntIntByteByteStringValue} returns this
 */
proto.PLongIntIntByteByteStringValue.prototype.setLongvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 intValue1 = 2;
 * @return {number}
 */
proto.PLongIntIntByteByteStringValue.prototype.getIntvalue1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PLongIntIntByteByteStringValue} returns this
 */
proto.PLongIntIntByteByteStringValue.prototype.setIntvalue1 = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 intValue2 = 3;
 * @return {number}
 */
proto.PLongIntIntByteByteStringValue.prototype.getIntvalue2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PLongIntIntByteByteStringValue} returns this
 */
proto.PLongIntIntByteByteStringValue.prototype.setIntvalue2 = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional sint32 byteValue1 = 4;
 * @return {number}
 */
proto.PLongIntIntByteByteStringValue.prototype.getBytevalue1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PLongIntIntByteByteStringValue} returns this
 */
proto.PLongIntIntByteByteStringValue.prototype.setBytevalue1 = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional sint32 byteValue2 = 5;
 * @return {number}
 */
proto.PLongIntIntByteByteStringValue.prototype.getBytevalue2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PLongIntIntByteByteStringValue} returns this
 */
proto.PLongIntIntByteByteStringValue.prototype.setBytevalue2 = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.StringValue stringValue = 6;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.PLongIntIntByteByteStringValue.prototype.getStringvalue = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 6));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.PLongIntIntByteByteStringValue} returns this
*/
proto.PLongIntIntByteByteStringValue.prototype.setStringvalue = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PLongIntIntByteByteStringValue} returns this
 */
proto.PLongIntIntByteByteStringValue.prototype.clearStringvalue = function() {
  return this.setStringvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PLongIntIntByteByteStringValue.prototype.hasStringvalue = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PIntBooleanIntBooleanValue.prototype.toObject = function(opt_includeInstance) {
  return proto.PIntBooleanIntBooleanValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PIntBooleanIntBooleanValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PIntBooleanIntBooleanValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    intvalue1: jspb.Message.getFieldWithDefault(msg, 1, 0),
    boolvalue1: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    intvalue2: jspb.Message.getFieldWithDefault(msg, 3, 0),
    boolvalue2: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PIntBooleanIntBooleanValue}
 */
proto.PIntBooleanIntBooleanValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PIntBooleanIntBooleanValue;
  return proto.PIntBooleanIntBooleanValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PIntBooleanIntBooleanValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PIntBooleanIntBooleanValue}
 */
proto.PIntBooleanIntBooleanValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntvalue1(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolvalue1(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntvalue2(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolvalue2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PIntBooleanIntBooleanValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PIntBooleanIntBooleanValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PIntBooleanIntBooleanValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PIntBooleanIntBooleanValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntvalue1();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBoolvalue1();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIntvalue2();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBoolvalue2();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional int32 intValue1 = 1;
 * @return {number}
 */
proto.PIntBooleanIntBooleanValue.prototype.getIntvalue1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PIntBooleanIntBooleanValue} returns this
 */
proto.PIntBooleanIntBooleanValue.prototype.setIntvalue1 = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool boolValue1 = 2;
 * @return {boolean}
 */
proto.PIntBooleanIntBooleanValue.prototype.getBoolvalue1 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PIntBooleanIntBooleanValue} returns this
 */
proto.PIntBooleanIntBooleanValue.prototype.setBoolvalue1 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 intValue2 = 3;
 * @return {number}
 */
proto.PIntBooleanIntBooleanValue.prototype.getIntvalue2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PIntBooleanIntBooleanValue} returns this
 */
proto.PIntBooleanIntBooleanValue.prototype.setIntvalue2 = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool boolValue2 = 4;
 * @return {boolean}
 */
proto.PIntBooleanIntBooleanValue.prototype.getBoolvalue2 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PIntBooleanIntBooleanValue} returns this
 */
proto.PIntBooleanIntBooleanValue.prototype.setBoolvalue2 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PStringStringValue.prototype.toObject = function(opt_includeInstance) {
  return proto.PStringStringValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PStringStringValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PStringStringValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    stringvalue1: (f = msg.getStringvalue1()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    stringvalue2: (f = msg.getStringvalue2()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PStringStringValue}
 */
proto.PStringStringValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PStringStringValue;
  return proto.PStringStringValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PStringStringValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PStringStringValue}
 */
proto.PStringStringValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setStringvalue1(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setStringvalue2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PStringStringValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PStringStringValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PStringStringValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PStringStringValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStringvalue1();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getStringvalue2();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.StringValue stringValue1 = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.PStringStringValue.prototype.getStringvalue1 = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.PStringStringValue} returns this
*/
proto.PStringStringValue.prototype.setStringvalue1 = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PStringStringValue} returns this
 */
proto.PStringStringValue.prototype.clearStringvalue1 = function() {
  return this.setStringvalue1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PStringStringValue.prototype.hasStringvalue1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.StringValue stringValue2 = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.PStringStringValue.prototype.getStringvalue2 = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.PStringStringValue} returns this
*/
proto.PStringStringValue.prototype.setStringvalue2 = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PStringStringValue} returns this
 */
proto.PStringStringValue.prototype.clearStringvalue2 = function() {
  return this.setStringvalue2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PStringStringValue.prototype.hasStringvalue2 = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.PAnnotationValue.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13]];

/**
 * @enum {number}
 */
proto.PAnnotationValue.FieldCase = {
  FIELD_NOT_SET: 0,
  STRINGVALUE: 1,
  BOOLVALUE: 2,
  INTVALUE: 3,
  LONGVALUE: 4,
  SHORTVALUE: 5,
  DOUBLEVALUE: 6,
  BINARYVALUE: 7,
  BYTEVALUE: 8,
  INTSTRINGVALUE: 9,
  STRINGSTRINGVALUE: 10,
  INTSTRINGSTRINGVALUE: 11,
  LONGINTINTBYTEBYTESTRINGVALUE: 12,
  INTBOOLEANINTBOOLEANVALUE: 13
};

/**
 * @return {proto.PAnnotationValue.FieldCase}
 */
proto.PAnnotationValue.prototype.getFieldCase = function() {
  return /** @type {proto.PAnnotationValue.FieldCase} */(jspb.Message.computeOneofCase(this, proto.PAnnotationValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PAnnotationValue.prototype.toObject = function(opt_includeInstance) {
  return proto.PAnnotationValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PAnnotationValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PAnnotationValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    stringvalue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    boolvalue: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    intvalue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    longvalue: jspb.Message.getFieldWithDefault(msg, 4, 0),
    shortvalue: jspb.Message.getFieldWithDefault(msg, 5, 0),
    doublevalue: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    binaryvalue: msg.getBinaryvalue_asB64(),
    bytevalue: jspb.Message.getFieldWithDefault(msg, 8, 0),
    intstringvalue: (f = msg.getIntstringvalue()) && proto.PIntStringValue.toObject(includeInstance, f),
    stringstringvalue: (f = msg.getStringstringvalue()) && proto.PStringStringValue.toObject(includeInstance, f),
    intstringstringvalue: (f = msg.getIntstringstringvalue()) && proto.PIntStringStringValue.toObject(includeInstance, f),
    longintintbytebytestringvalue: (f = msg.getLongintintbytebytestringvalue()) && proto.PLongIntIntByteByteStringValue.toObject(includeInstance, f),
    intbooleanintbooleanvalue: (f = msg.getIntbooleanintbooleanvalue()) && proto.PIntBooleanIntBooleanValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PAnnotationValue}
 */
proto.PAnnotationValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PAnnotationValue;
  return proto.PAnnotationValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PAnnotationValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PAnnotationValue}
 */
proto.PAnnotationValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringvalue(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolvalue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntvalue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLongvalue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setShortvalue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoublevalue(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBinaryvalue(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBytevalue(value);
      break;
    case 9:
      var value = new proto.PIntStringValue;
      reader.readMessage(value,proto.PIntStringValue.deserializeBinaryFromReader);
      msg.setIntstringvalue(value);
      break;
    case 10:
      var value = new proto.PStringStringValue;
      reader.readMessage(value,proto.PStringStringValue.deserializeBinaryFromReader);
      msg.setStringstringvalue(value);
      break;
    case 11:
      var value = new proto.PIntStringStringValue;
      reader.readMessage(value,proto.PIntStringStringValue.deserializeBinaryFromReader);
      msg.setIntstringstringvalue(value);
      break;
    case 12:
      var value = new proto.PLongIntIntByteByteStringValue;
      reader.readMessage(value,proto.PLongIntIntByteByteStringValue.deserializeBinaryFromReader);
      msg.setLongintintbytebytestringvalue(value);
      break;
    case 13:
      var value = new proto.PIntBooleanIntBooleanValue;
      reader.readMessage(value,proto.PIntBooleanIntBooleanValue.deserializeBinaryFromReader);
      msg.setIntbooleanintbooleanvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PAnnotationValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PAnnotationValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PAnnotationValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PAnnotationValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeSint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeSint32(
      8,
      f
    );
  }
  f = message.getIntstringvalue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.PIntStringValue.serializeBinaryToWriter
    );
  }
  f = message.getStringstringvalue();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.PStringStringValue.serializeBinaryToWriter
    );
  }
  f = message.getIntstringstringvalue();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.PIntStringStringValue.serializeBinaryToWriter
    );
  }
  f = message.getLongintintbytebytestringvalue();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.PLongIntIntByteByteStringValue.serializeBinaryToWriter
    );
  }
  f = message.getIntbooleanintbooleanvalue();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.PIntBooleanIntBooleanValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stringValue = 1;
 * @return {string}
 */
proto.PAnnotationValue.prototype.getStringvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.setStringvalue = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearStringvalue = function() {
  return jspb.Message.setOneofField(this, 1, proto.PAnnotationValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasStringvalue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool boolValue = 2;
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.getBoolvalue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.setBoolvalue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearBoolvalue = function() {
  return jspb.Message.setOneofField(this, 2, proto.PAnnotationValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasBoolvalue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 intValue = 3;
 * @return {number}
 */
proto.PAnnotationValue.prototype.getIntvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.setIntvalue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearIntvalue = function() {
  return jspb.Message.setOneofField(this, 3, proto.PAnnotationValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasIntvalue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 longValue = 4;
 * @return {number}
 */
proto.PAnnotationValue.prototype.getLongvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.setLongvalue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearLongvalue = function() {
  return jspb.Message.setOneofField(this, 4, proto.PAnnotationValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasLongvalue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional sint32 shortValue = 5;
 * @return {number}
 */
proto.PAnnotationValue.prototype.getShortvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.setShortvalue = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearShortvalue = function() {
  return jspb.Message.setOneofField(this, 5, proto.PAnnotationValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasShortvalue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double doubleValue = 6;
 * @return {number}
 */
proto.PAnnotationValue.prototype.getDoublevalue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.setDoublevalue = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearDoublevalue = function() {
  return jspb.Message.setOneofField(this, 6, proto.PAnnotationValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasDoublevalue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes binaryValue = 7;
 * @return {!(string|Uint8Array)}
 */
proto.PAnnotationValue.prototype.getBinaryvalue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes binaryValue = 7;
 * This is a type-conversion wrapper around `getBinaryvalue()`
 * @return {string}
 */
proto.PAnnotationValue.prototype.getBinaryvalue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBinaryvalue()));
};


/**
 * optional bytes binaryValue = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinaryvalue()`
 * @return {!Uint8Array}
 */
proto.PAnnotationValue.prototype.getBinaryvalue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBinaryvalue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.setBinaryvalue = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearBinaryvalue = function() {
  return jspb.Message.setOneofField(this, 7, proto.PAnnotationValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasBinaryvalue = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional sint32 byteValue = 8;
 * @return {number}
 */
proto.PAnnotationValue.prototype.getBytevalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.setBytevalue = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearBytevalue = function() {
  return jspb.Message.setOneofField(this, 8, proto.PAnnotationValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasBytevalue = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PIntStringValue intStringValue = 9;
 * @return {?proto.PIntStringValue}
 */
proto.PAnnotationValue.prototype.getIntstringvalue = function() {
  return /** @type{?proto.PIntStringValue} */ (
    jspb.Message.getWrapperField(this, proto.PIntStringValue, 9));
};


/**
 * @param {?proto.PIntStringValue|undefined} value
 * @return {!proto.PAnnotationValue} returns this
*/
proto.PAnnotationValue.prototype.setIntstringvalue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearIntstringvalue = function() {
  return this.setIntstringvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasIntstringvalue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PStringStringValue stringStringValue = 10;
 * @return {?proto.PStringStringValue}
 */
proto.PAnnotationValue.prototype.getStringstringvalue = function() {
  return /** @type{?proto.PStringStringValue} */ (
    jspb.Message.getWrapperField(this, proto.PStringStringValue, 10));
};


/**
 * @param {?proto.PStringStringValue|undefined} value
 * @return {!proto.PAnnotationValue} returns this
*/
proto.PAnnotationValue.prototype.setStringstringvalue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearStringstringvalue = function() {
  return this.setStringstringvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasStringstringvalue = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PIntStringStringValue intStringStringValue = 11;
 * @return {?proto.PIntStringStringValue}
 */
proto.PAnnotationValue.prototype.getIntstringstringvalue = function() {
  return /** @type{?proto.PIntStringStringValue} */ (
    jspb.Message.getWrapperField(this, proto.PIntStringStringValue, 11));
};


/**
 * @param {?proto.PIntStringStringValue|undefined} value
 * @return {!proto.PAnnotationValue} returns this
*/
proto.PAnnotationValue.prototype.setIntstringstringvalue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearIntstringstringvalue = function() {
  return this.setIntstringstringvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasIntstringstringvalue = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PLongIntIntByteByteStringValue longIntIntByteByteStringValue = 12;
 * @return {?proto.PLongIntIntByteByteStringValue}
 */
proto.PAnnotationValue.prototype.getLongintintbytebytestringvalue = function() {
  return /** @type{?proto.PLongIntIntByteByteStringValue} */ (
    jspb.Message.getWrapperField(this, proto.PLongIntIntByteByteStringValue, 12));
};


/**
 * @param {?proto.PLongIntIntByteByteStringValue|undefined} value
 * @return {!proto.PAnnotationValue} returns this
*/
proto.PAnnotationValue.prototype.setLongintintbytebytestringvalue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearLongintintbytebytestringvalue = function() {
  return this.setLongintintbytebytestringvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasLongintintbytebytestringvalue = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional PIntBooleanIntBooleanValue intBooleanIntBooleanValue = 13;
 * @return {?proto.PIntBooleanIntBooleanValue}
 */
proto.PAnnotationValue.prototype.getIntbooleanintbooleanvalue = function() {
  return /** @type{?proto.PIntBooleanIntBooleanValue} */ (
    jspb.Message.getWrapperField(this, proto.PIntBooleanIntBooleanValue, 13));
};


/**
 * @param {?proto.PIntBooleanIntBooleanValue|undefined} value
 * @return {!proto.PAnnotationValue} returns this
*/
proto.PAnnotationValue.prototype.setIntbooleanintbooleanvalue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.PAnnotationValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PAnnotationValue} returns this
 */
proto.PAnnotationValue.prototype.clearIntbooleanintbooleanvalue = function() {
  return this.setIntbooleanintbooleanvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotationValue.prototype.hasIntbooleanintbooleanvalue = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PAnnotation.prototype.toObject = function(opt_includeInstance) {
  return proto.PAnnotation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PAnnotation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PAnnotation.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: (f = msg.getValue()) && proto.PAnnotationValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PAnnotation}
 */
proto.PAnnotation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PAnnotation;
  return proto.PAnnotation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PAnnotation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PAnnotation}
 */
proto.PAnnotation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.PAnnotationValue;
      reader.readMessage(value,proto.PAnnotationValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PAnnotation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PAnnotation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PAnnotation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PAnnotation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PAnnotationValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 key = 1;
 * @return {number}
 */
proto.PAnnotation.prototype.getKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PAnnotation} returns this
 */
proto.PAnnotation.prototype.setKey = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional PAnnotationValue value = 2;
 * @return {?proto.PAnnotationValue}
 */
proto.PAnnotation.prototype.getValue = function() {
  return /** @type{?proto.PAnnotationValue} */ (
    jspb.Message.getWrapperField(this, proto.PAnnotationValue, 2));
};


/**
 * @param {?proto.PAnnotationValue|undefined} value
 * @return {!proto.PAnnotation} returns this
*/
proto.PAnnotation.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PAnnotation} returns this
 */
proto.PAnnotation.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PAnnotation.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto);
